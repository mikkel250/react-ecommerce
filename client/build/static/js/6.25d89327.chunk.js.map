{"version":3,"sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["StripeCheckoutButton","_ref","price","priceForStripe","publishableKey","process","REACT_APP_STRIPE_PUBLISHABLE_KEY","apiUrl","REACT_APP_API_URL","_jsx","StripeCheckout","label","name","billingAddress","shippingAddress","image","description","concat","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","JSON","parse","stripeKey","CheckoutItemContainer","styled","div","_templateObject","_taggedTemplateLiteral","ImageContainer","_templateObject2","TextContainer","span","_templateObject3","QuantityContainer","_templateObject4","RemoveButtonContainer","_templateObject5","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","imageUrl","quantity","_jsxs","children","src","alt","onClick","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","CheckoutItem","id"],"mappings":"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","file":"static/js/6.25d89327.chunk.js","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || \"pk_test_sLeRAsVNe6ssJc5lCC3PThGa00q0KWcjfZ\";\n  \n  // Use environment variable for API URL or fallback to relative path\n  const apiUrl = process.env.REACT_APP_API_URL || \"\";\n\n  const onToken = token => {\n    axios({\n      url: `${apiUrl}/payment`,\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    })\n      .then(response => {\n        alert(\"Payment Succesful!\");\n      })\n      .catch(error => {\n        console.log(\"Payment Error: \", JSON.parse(error));\n        alert(\n          \"There was an issue with your payment. Please make sure you use the provided test credit card.\"\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"CRWN Clothing Ltd.\"\n      billingAddress\n      shippingAddress\n      image=\"https://svgshare.com/i/CUz.svg\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n","import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n\n  span {\n    margin: 0 10px;\n  }\n\n  div {\n    cursor: pointer;\n  }\n`;\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem\n} from '../../redux/cart/cart.actions';\n\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  TextContainer,\n  QuantityContainer,\n  RemoveButtonContainer\n} from './checkout-item.styles';\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt='item' />\n      </ImageContainer>\n      <TextContainer>{name}</TextContainer>\n      <QuantityContainer>\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\n        <span>{quantity}</span>\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\n      </QuantityContainer>\n      <TextContainer>{price}</TextContainer>\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\n        &#10005;\n      </RemoveButtonContainer>\n    </CheckoutItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CheckoutItem);\n","import styled from \"styled-components\";\n\nexport const CheckoutPageContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n\n  button {\n    margin-left: auto;\n    margin-top: 50px;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 90%;\n  }\n`;\n\nexport const CheckoutHeaderContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlockContainer = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 20%;\n\n    &:last-child {\n      width: 10%;\n    }\n  }\n`;\n\nexport const TotalContainer = styled.div`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n\n  @media screen and (max-width: 800px) {\n    font-size: 16px;\n  }\n`;\n\nexport const WarningContainer = styled.div`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 26px;\n  color: red;\n\n  @media screen and (max-width: 800px) {\n    font-size: 16px;\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\n\nimport {\n  selectCartItems,\n  selectCartTotal\n} from '../../redux/cart/cart.selectors';\n\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n  WarningContainer\n} from './checkout.styles';\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantity</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map(cartItem => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\n    <WarningContainer>\n      *Please use the following test credit card for payments*\n      <br />\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n    </WarningContainer>\n    <StripeCheckoutButton price={total} />\n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"],"sourceRoot":""}