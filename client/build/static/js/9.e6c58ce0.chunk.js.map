{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["subColor","shrinkLabelStyles","css","_templateObject","_taggedTemplateLiteral","GroupContainer","styled","div","_templateObject2","FormInputContainer","input","_templateObject3","FormInputLabel","label","_templateObject4","FormInput","_ref","handleChange","props","_objectWithoutProperties","_excluded","_jsxs","children","_jsx","_objectSpread","onChange","className","value","length","SignInContainer","SignInTitle","h2","ButtonsBarContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","userCredentials","setCredentials","useState","event","name","target","onSubmit","async","preventDefault","type","required","CustomButton","onClick","isGoogleSignIn","SignUpContainer","SignUpTitle","signUpStart","setUserCredentials","displayName","confirmPassword","alert","SignInAndSignUpContainer","SignInAndSignUpPage","SignIn","SignUp"],"mappings":"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","file":"static/js/9.e6c58ce0.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\n\nconst subColor = \"grey\";\nconst mainColor = \"black\";\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n\n  input[type=\"password\"] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus ~ label {\n    ${shrinkLabelStyles}\n  }\n`;\n\nexport const FormInputLabel = styled.label`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;\n","import React from 'react';\n\nimport {\n  GroupContainer,\n  FormInputContainer,\n  FormInputLabel\n} from './form-input.styles';\n\nconst FormInput = ({ handleChange, label, ...props }) => (\n  <GroupContainer>\n    <FormInputContainer onChange={handleChange} {...props} />\n    {label ? (\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\n        {label}\n      </FormInputLabel>\n    ) : null}\n  </GroupContainer>\n);\n\nexport default FormInput;\n","import styled from \"styled-components\";\n\nexport const SignInContainer = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from \"../../redux/user/user.actions\";\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from \"./sign-in.styles\";\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          handleChange={handleChange}\n          value={email}\n          label=\"email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type=\"submit\"> Sign in </CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn);\n","import styled from \"styled-components\";\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n`;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // want to keep the validation in the component, I think?\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <SignUpContainer>\n      <SignUpTitle>I do not have a account</SignUpTitle>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignUp);\n","import styled from \"styled-components\";\n\nexport const SignInAndSignUpContainer = styled.div`\n  width: 850px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n\n  @media screen and (max-width: 800px) {\n    flex-direction: column;\n    width: unset;\n    align-items: center;\n\n    > *:first-child {\n      margin-bottom: 50px;\n    }\n  }\n`;\n","import React from 'react';\n\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.styles';\n\nconst SignInAndSignUpPage = () => (\n  <SignInAndSignUpContainer>\n    <SignIn />\n    <SignUp />\n  </SignInAndSignUpContainer>\n);\n\nexport default SignInAndSignUpPage;\n"],"sourceRoot":""}